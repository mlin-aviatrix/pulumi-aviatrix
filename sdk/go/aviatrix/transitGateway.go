// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TransitGateway struct {
	pulumi.CustomResourceState

	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for
	// this gateway.
	AllocateNewEip pulumi.BoolPtrOutput `pulumi:"allocateNewEip"`
	// Approved learned CIDRs. Available as of provider version R2.21+.
	ApprovedLearnedCidrs pulumi.StringArrayOutput `pulumi:"approvedLearnedCidrs"`
	// Availability domain for OCI.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.
	AzureEipNameResourceGroup pulumi.StringOutput `pulumi:"azureEipNameResourceGroup"`
	// Enable Equal Cost Multi Path (ECMP) routing for the next hop.
	BgpEcmp pulumi.BoolPtrOutput `pulumi:"bgpEcmp"`
	// BGP Hold Time.
	BgpHoldTime pulumi.IntPtrOutput `pulumi:"bgpHoldTime"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP Transit.
	BgpLanInterfaces TransitGatewayBgpLanInterfaceArrayOutput `pulumi:"bgpLanInterfaces"`
	// List of available BGP LAN interface IPs for transit external device connection creation. Only supports GCP. Available as
	// of provider version R2.21.0+.
	BgpLanIpLists pulumi.StringArrayOutput `pulumi:"bgpLanIpLists"`
	// Intended CIDR list to be advertised to external bgp router.
	BgpManualSpokeAdvertiseCidrs pulumi.StringPtrOutput `pulumi:"bgpManualSpokeAdvertiseCidrs"`
	// BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.
	BgpPollingTime pulumi.StringPtrOutput `pulumi:"bgpPollingTime"`
	// Instance ID of the transit gateway.
	CloudInstanceId pulumi.StringOutput `pulumi:"cloudInstanceId"`
	// Type of cloud service provider, requires an integer value. Use 1 for AWS.
	CloudType pulumi.IntOutput `pulumi:"cloudType"`
	// Specify Connected Transit status.
	ConnectedTransit pulumi.BoolPtrOutput `pulumi:"connectedTransit"`
	// Customer managed key ID.
	CustomerManagedKeys pulumi.StringPtrOutput `pulumi:"customerManagedKeys"`
	// A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned
	// routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this
	// transit gateway.
	CustomizedSpokeVpcRoutes pulumi.StringPtrOutput `pulumi:"customizedSpokeVpcRoutes"`
	// A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC
	// routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall
	// management access for a transit firenet gateway must be enabled.
	CustomizedTransitVpcRoutes pulumi.StringArrayOutput `pulumi:"customizedTransitVpcRoutes"`
	// Required when allocate_new_eip is false. It uses specified EIP for this gateway.
	Eip pulumi.StringOutput `pulumi:"eip"`
	// Enables Active-Standby Mode, available only with HA enabled.
	EnableActiveStandby pulumi.BoolPtrOutput `pulumi:"enableActiveStandby"`
	// Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.
	EnableActiveStandbyPreemptive pulumi.BoolPtrOutput `pulumi:"enableActiveStandbyPreemptive"`
	// Switch to Enable/Disable advertise transit VPC network CIDR.
	EnableAdvertiseTransitCidr pulumi.BoolPtrOutput `pulumi:"enableAdvertiseTransitCidr"`
	// Pre-allocate a network interface(eth4) for "BGP over LAN" functionality. Only valid for cloud_type = 4 (GCP) and 8
	// (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+
	EnableBgpOverLan pulumi.BoolPtrOutput `pulumi:"enableBgpOverLan"`
	// Specify whether to enable egress transit firenet interfaces or not.
	EnableEgressTransitFirenet pulumi.BoolPtrOutput `pulumi:"enableEgressTransitFirenet"`
	// Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default
	// value: false.
	EnableEncryptVolume pulumi.BoolPtrOutput `pulumi:"enableEncryptVolume"`
	// Specify whether to enable firenet interfaces or not.
	EnableFirenet pulumi.BoolPtrOutput `pulumi:"enableFirenet"`
	// Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet`
	// are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions
	// us-west-2 and us-east-1. Valid values: true or false. Default value: false.
	EnableGatewayLoadBalancer pulumi.BoolPtrOutput `pulumi:"enableGatewayLoadBalancer"`
	// Sign of readiness for TGW connection.
	EnableHybridConnection pulumi.BoolPtrOutput `pulumi:"enableHybridConnection"`
	// Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.
	EnableJumboFrame pulumi.BoolPtrOutput `pulumi:"enableJumboFrame"`
	// Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrOutput `pulumi:"enableLearnedCidrsApproval"`
	// Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for
	// cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.
	EnableMonitorGatewaySubnets pulumi.BoolPtrOutput `pulumi:"enableMonitorGatewaySubnets"`
	// Enable Multi-tier Transit mode on transit gateway.
	EnableMultiTierTransit pulumi.BoolPtrOutput `pulumi:"enableMultiTierTransit"`
	// Enable private OOB.
	EnablePrivateOob pulumi.BoolPtrOutput `pulumi:"enablePrivateOob"`
	// Enable S2C receive packet CPU re-balancing on transit gateway.
	EnableS2cRxBalancing pulumi.BoolPtrOutput `pulumi:"enableS2cRxBalancing"`
	// Enable segmentation to allow association of transit gateway to security domains.
	EnableSegmentation pulumi.BoolPtrOutput `pulumi:"enableSegmentation"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrOutput `pulumi:"enableSpotInstance"`
	// Specify whether to enable transit firenet interfaces or not.
	EnableTransitFirenet pulumi.BoolPtrOutput `pulumi:"enableTransitFirenet"`
	// Enable summarize CIDR to TGW.
	EnableTransitSummarizeCidrToTgw pulumi.BoolPtrOutput `pulumi:"enableTransitSummarizeCidrToTgw"`
	// Enable vpc_dns_server for Gateway. Valid values: true, false.
	EnableVpcDnsServer pulumi.BoolPtrOutput `pulumi:"enableVpcDnsServer"`
	// A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all
	// the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.
	ExcludedAdvertisedSpokeRoutes pulumi.StringPtrOutput `pulumi:"excludedAdvertisedSpokeRoutes"`
	// Fault domain for OCI.
	FaultDomain pulumi.StringOutput `pulumi:"faultDomain"`
	// A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or
	// it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all
	// spoke gateways attached to this transit gateway.
	FilteredSpokeVpcRoutes pulumi.StringPtrOutput `pulumi:"filteredSpokeVpcRoutes"`
	// Name of the gateway which is going to be created.
	GwName pulumi.StringOutput `pulumi:"gwName"`
	// Size of the gateway instance.
	GwSize pulumi.StringOutput `pulumi:"gwSize"`
	// HA availability domain for OCI.
	HaAvailabilityDomain pulumi.StringOutput `pulumi:"haAvailabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.
	HaAzureEipNameResourceGroup pulumi.StringOutput `pulumi:"haAzureEipNameResourceGroup"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP HA Transit.
	HaBgpLanInterfaces TransitGatewayHaBgpLanInterfaceArrayOutput `pulumi:"haBgpLanInterfaces"`
	// List of available BGP LAN interface IPs for transit external device HA connection creation. Only supports GCP. Available
	// as of provider version R2.21.0+.
	HaBgpLanIpLists pulumi.StringArrayOutput `pulumi:"haBgpLanIpLists"`
	// Cloud instance ID of HA transit gateway.
	HaCloudInstanceId pulumi.StringOutput `pulumi:"haCloudInstanceId"`
	// Public IP address that you want assigned to the HA Transit Gateway.
	HaEip pulumi.StringOutput `pulumi:"haEip"`
	// HA fault domain for OCI.
	HaFaultDomain pulumi.StringOutput `pulumi:"haFaultDomain"`
	// Aviatrix transit gateway unique name of HA transit gateway.
	HaGwName pulumi.StringOutput `pulumi:"haGwName"`
	// HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).
	HaGwSize pulumi.StringPtrOutput `pulumi:"haGwSize"`
	// ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the
	// gateway to the specified version.
	HaImageVersion pulumi.StringOutput `pulumi:"haImageVersion"`
	// AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet
	// is set.
	HaInsaneModeAz pulumi.StringPtrOutput `pulumi:"haInsaneModeAz"`
	// Transit gateway lan interface cidr for the HA gateway.
	HaLanInterfaceCidr pulumi.StringOutput `pulumi:"haLanInterfaceCidr"`
	// OOB HA availability zone.
	HaOobAvailabilityZone pulumi.StringPtrOutput `pulumi:"haOobAvailabilityZone"`
	// OOB HA management subnet.
	HaOobManagementSubnet pulumi.StringPtrOutput `pulumi:"haOobManagementSubnet"`
	// Private IP address of HA transit gateway.
	HaPrivateIp pulumi.StringOutput `pulumi:"haPrivateIp"`
	// HA security group used for the transit gateway.
	HaSecurityGroupId pulumi.StringOutput `pulumi:"haSecurityGroupId"`
	// ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update
	// the gateway to the specified version. If left blank, the gateway software version will continue to be managed through
	// the aviatrix_controller_config resource.
	HaSoftwareVersion pulumi.StringOutput `pulumi:"haSoftwareVersion"`
	// HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP
	// gateway.
	HaSubnet pulumi.StringPtrOutput `pulumi:"haSubnet"`
	// HA Zone. Required if enabling HA for GCP. Optional for Azure.
	HaZone pulumi.StringPtrOutput `pulumi:"haZone"`
	// image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway
	// to the specified version.
	ImageVersion pulumi.StringOutput `pulumi:"imageVersion"`
	// Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode
	// is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
	InsaneMode pulumi.BoolPtrOutput `pulumi:"insaneMode"`
	// AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.
	InsaneModeAz pulumi.StringPtrOutput `pulumi:"insaneModeAz"`
	// Transit gateway lan interface cidr.
	LanInterfaceCidr pulumi.StringOutput `pulumi:"lanInterfaceCidr"`
	// LAN Private Subnet. Only used for GCP Transit FireNet.
	LanPrivateSubnet pulumi.StringPtrOutput `pulumi:"lanPrivateSubnet"`
	// LAN VPC ID. Only used for GCP Transit FireNet.
	LanVpcId pulumi.StringPtrOutput `pulumi:"lanVpcId"`
	// Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to
	// 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured
	// on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the
	// connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.
	LearnedCidrsApprovalMode pulumi.StringPtrOutput `pulumi:"learnedCidrsApprovalMode"`
	// Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringOutput `pulumi:"localAsNumber"`
	// A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.
	MonitorExcludeLists pulumi.StringArrayOutput `pulumi:"monitorExcludeLists"`
	// OOB subnet availability zone.
	OobAvailabilityZone pulumi.StringPtrOutput `pulumi:"oobAvailabilityZone"`
	// OOB management subnet.
	OobManagementSubnet pulumi.StringPtrOutput `pulumi:"oobManagementSubnet"`
	// List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.
	PrependAsPaths pulumi.StringArrayOutput `pulumi:"prependAsPaths"`
	// Private IP address of the transit gateway created.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// Gateway ethernet interface RX queue size. Supported for AWS related clouds only.
	RxQueueSize pulumi.StringPtrOutput `pulumi:"rxQueueSize"`
	// Security group used for the transit gateway.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Set to 'enabled' if this feature is desired.
	SingleAzHa pulumi.BoolPtrOutput `pulumi:"singleAzHa"`
	// Enable or disable Source NAT feature in 'single_ip' mode for this container.
	SingleIpSnat pulumi.BoolPtrOutput `pulumi:"singleIpSnat"`
	// software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the
	// gateway to the specified version. If left blank, the gateway software version will continue to be managed through the
	// aviatrix_controller_config resource.
	SoftwareVersion pulumi.StringOutput `pulumi:"softwareVersion"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrOutput `pulumi:"spotPrice"`
	// Public Subnet Name.
	Subnet pulumi.StringOutput `pulumi:"subnet"`
	// Instance tag of cloud provider.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayOutput `pulumi:"tagLists"`
	// A map of tags to assign to the transit gateway.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The IPSec tunnel down detection time for the transit gateway.
	TunnelDetectionTime pulumi.IntOutput `pulumi:"tunnelDetectionTime"`
	// VPC-ID/VNet-Name of cloud provider.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Region of cloud provider.
	VpcReg pulumi.StringOutput `pulumi:"vpcReg"`
	// Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewTransitGateway registers a new resource with the given unique name, arguments, and options.
func NewTransitGateway(ctx *pulumi.Context,
	name string, args *TransitGatewayArgs, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.CloudType == nil {
		return nil, errors.New("invalid value for required argument 'CloudType'")
	}
	if args.GwName == nil {
		return nil, errors.New("invalid value for required argument 'GwName'")
	}
	if args.GwSize == nil {
		return nil, errors.New("invalid value for required argument 'GwSize'")
	}
	if args.Subnet == nil {
		return nil, errors.New("invalid value for required argument 'Subnet'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VpcReg == nil {
		return nil, errors.New("invalid value for required argument 'VpcReg'")
	}
	var resource TransitGateway
	err := ctx.RegisterResource("aviatrix:index/transitGateway:TransitGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGateway gets an existing TransitGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayState, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	var resource TransitGateway
	err := ctx.ReadResource("aviatrix:index/transitGateway:TransitGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGateway resources.
type transitGatewayState struct {
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	AccountName *string `pulumi:"accountName"`
	// If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for
	// this gateway.
	AllocateNewEip *bool `pulumi:"allocateNewEip"`
	// Approved learned CIDRs. Available as of provider version R2.21+.
	ApprovedLearnedCidrs []string `pulumi:"approvedLearnedCidrs"`
	// Availability domain for OCI.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.
	AzureEipNameResourceGroup *string `pulumi:"azureEipNameResourceGroup"`
	// Enable Equal Cost Multi Path (ECMP) routing for the next hop.
	BgpEcmp *bool `pulumi:"bgpEcmp"`
	// BGP Hold Time.
	BgpHoldTime *int `pulumi:"bgpHoldTime"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP Transit.
	BgpLanInterfaces []TransitGatewayBgpLanInterface `pulumi:"bgpLanInterfaces"`
	// List of available BGP LAN interface IPs for transit external device connection creation. Only supports GCP. Available as
	// of provider version R2.21.0+.
	BgpLanIpLists []string `pulumi:"bgpLanIpLists"`
	// Intended CIDR list to be advertised to external bgp router.
	BgpManualSpokeAdvertiseCidrs *string `pulumi:"bgpManualSpokeAdvertiseCidrs"`
	// BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.
	BgpPollingTime *string `pulumi:"bgpPollingTime"`
	// Instance ID of the transit gateway.
	CloudInstanceId *string `pulumi:"cloudInstanceId"`
	// Type of cloud service provider, requires an integer value. Use 1 for AWS.
	CloudType *int `pulumi:"cloudType"`
	// Specify Connected Transit status.
	ConnectedTransit *bool `pulumi:"connectedTransit"`
	// Customer managed key ID.
	CustomerManagedKeys *string `pulumi:"customerManagedKeys"`
	// A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned
	// routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this
	// transit gateway.
	CustomizedSpokeVpcRoutes *string `pulumi:"customizedSpokeVpcRoutes"`
	// A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC
	// routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall
	// management access for a transit firenet gateway must be enabled.
	CustomizedTransitVpcRoutes []string `pulumi:"customizedTransitVpcRoutes"`
	// Required when allocate_new_eip is false. It uses specified EIP for this gateway.
	Eip *string `pulumi:"eip"`
	// Enables Active-Standby Mode, available only with HA enabled.
	EnableActiveStandby *bool `pulumi:"enableActiveStandby"`
	// Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.
	EnableActiveStandbyPreemptive *bool `pulumi:"enableActiveStandbyPreemptive"`
	// Switch to Enable/Disable advertise transit VPC network CIDR.
	EnableAdvertiseTransitCidr *bool `pulumi:"enableAdvertiseTransitCidr"`
	// Pre-allocate a network interface(eth4) for "BGP over LAN" functionality. Only valid for cloud_type = 4 (GCP) and 8
	// (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+
	EnableBgpOverLan *bool `pulumi:"enableBgpOverLan"`
	// Specify whether to enable egress transit firenet interfaces or not.
	EnableEgressTransitFirenet *bool `pulumi:"enableEgressTransitFirenet"`
	// Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default
	// value: false.
	EnableEncryptVolume *bool `pulumi:"enableEncryptVolume"`
	// Specify whether to enable firenet interfaces or not.
	EnableFirenet *bool `pulumi:"enableFirenet"`
	// Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet`
	// are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions
	// us-west-2 and us-east-1. Valid values: true or false. Default value: false.
	EnableGatewayLoadBalancer *bool `pulumi:"enableGatewayLoadBalancer"`
	// Sign of readiness for TGW connection.
	EnableHybridConnection *bool `pulumi:"enableHybridConnection"`
	// Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.
	EnableJumboFrame *bool `pulumi:"enableJumboFrame"`
	// Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for
	// cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.
	EnableMonitorGatewaySubnets *bool `pulumi:"enableMonitorGatewaySubnets"`
	// Enable Multi-tier Transit mode on transit gateway.
	EnableMultiTierTransit *bool `pulumi:"enableMultiTierTransit"`
	// Enable private OOB.
	EnablePrivateOob *bool `pulumi:"enablePrivateOob"`
	// Enable S2C receive packet CPU re-balancing on transit gateway.
	EnableS2cRxBalancing *bool `pulumi:"enableS2cRxBalancing"`
	// Enable segmentation to allow association of transit gateway to security domains.
	EnableSegmentation *bool `pulumi:"enableSegmentation"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance *bool `pulumi:"enableSpotInstance"`
	// Specify whether to enable transit firenet interfaces or not.
	EnableTransitFirenet *bool `pulumi:"enableTransitFirenet"`
	// Enable summarize CIDR to TGW.
	EnableTransitSummarizeCidrToTgw *bool `pulumi:"enableTransitSummarizeCidrToTgw"`
	// Enable vpc_dns_server for Gateway. Valid values: true, false.
	EnableVpcDnsServer *bool `pulumi:"enableVpcDnsServer"`
	// A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all
	// the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.
	ExcludedAdvertisedSpokeRoutes *string `pulumi:"excludedAdvertisedSpokeRoutes"`
	// Fault domain for OCI.
	FaultDomain *string `pulumi:"faultDomain"`
	// A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or
	// it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all
	// spoke gateways attached to this transit gateway.
	FilteredSpokeVpcRoutes *string `pulumi:"filteredSpokeVpcRoutes"`
	// Name of the gateway which is going to be created.
	GwName *string `pulumi:"gwName"`
	// Size of the gateway instance.
	GwSize *string `pulumi:"gwSize"`
	// HA availability domain for OCI.
	HaAvailabilityDomain *string `pulumi:"haAvailabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.
	HaAzureEipNameResourceGroup *string `pulumi:"haAzureEipNameResourceGroup"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP HA Transit.
	HaBgpLanInterfaces []TransitGatewayHaBgpLanInterface `pulumi:"haBgpLanInterfaces"`
	// List of available BGP LAN interface IPs for transit external device HA connection creation. Only supports GCP. Available
	// as of provider version R2.21.0+.
	HaBgpLanIpLists []string `pulumi:"haBgpLanIpLists"`
	// Cloud instance ID of HA transit gateway.
	HaCloudInstanceId *string `pulumi:"haCloudInstanceId"`
	// Public IP address that you want assigned to the HA Transit Gateway.
	HaEip *string `pulumi:"haEip"`
	// HA fault domain for OCI.
	HaFaultDomain *string `pulumi:"haFaultDomain"`
	// Aviatrix transit gateway unique name of HA transit gateway.
	HaGwName *string `pulumi:"haGwName"`
	// HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).
	HaGwSize *string `pulumi:"haGwSize"`
	// ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the
	// gateway to the specified version.
	HaImageVersion *string `pulumi:"haImageVersion"`
	// AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet
	// is set.
	HaInsaneModeAz *string `pulumi:"haInsaneModeAz"`
	// Transit gateway lan interface cidr for the HA gateway.
	HaLanInterfaceCidr *string `pulumi:"haLanInterfaceCidr"`
	// OOB HA availability zone.
	HaOobAvailabilityZone *string `pulumi:"haOobAvailabilityZone"`
	// OOB HA management subnet.
	HaOobManagementSubnet *string `pulumi:"haOobManagementSubnet"`
	// Private IP address of HA transit gateway.
	HaPrivateIp *string `pulumi:"haPrivateIp"`
	// HA security group used for the transit gateway.
	HaSecurityGroupId *string `pulumi:"haSecurityGroupId"`
	// ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update
	// the gateway to the specified version. If left blank, the gateway software version will continue to be managed through
	// the aviatrix_controller_config resource.
	HaSoftwareVersion *string `pulumi:"haSoftwareVersion"`
	// HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP
	// gateway.
	HaSubnet *string `pulumi:"haSubnet"`
	// HA Zone. Required if enabling HA for GCP. Optional for Azure.
	HaZone *string `pulumi:"haZone"`
	// image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway
	// to the specified version.
	ImageVersion *string `pulumi:"imageVersion"`
	// Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode
	// is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
	InsaneMode *bool `pulumi:"insaneMode"`
	// AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.
	InsaneModeAz *string `pulumi:"insaneModeAz"`
	// Transit gateway lan interface cidr.
	LanInterfaceCidr *string `pulumi:"lanInterfaceCidr"`
	// LAN Private Subnet. Only used for GCP Transit FireNet.
	LanPrivateSubnet *string `pulumi:"lanPrivateSubnet"`
	// LAN VPC ID. Only used for GCP Transit FireNet.
	LanVpcId *string `pulumi:"lanVpcId"`
	// Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to
	// 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured
	// on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the
	// connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.
	LearnedCidrsApprovalMode *string `pulumi:"learnedCidrsApprovalMode"`
	// Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber *string `pulumi:"localAsNumber"`
	// A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.
	MonitorExcludeLists []string `pulumi:"monitorExcludeLists"`
	// OOB subnet availability zone.
	OobAvailabilityZone *string `pulumi:"oobAvailabilityZone"`
	// OOB management subnet.
	OobManagementSubnet *string `pulumi:"oobManagementSubnet"`
	// List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// Private IP address of the transit gateway created.
	PrivateIp *string `pulumi:"privateIp"`
	// Gateway ethernet interface RX queue size. Supported for AWS related clouds only.
	RxQueueSize *string `pulumi:"rxQueueSize"`
	// Security group used for the transit gateway.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Set to 'enabled' if this feature is desired.
	SingleAzHa *bool `pulumi:"singleAzHa"`
	// Enable or disable Source NAT feature in 'single_ip' mode for this container.
	SingleIpSnat *bool `pulumi:"singleIpSnat"`
	// software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the
	// gateway to the specified version. If left blank, the gateway software version will continue to be managed through the
	// aviatrix_controller_config resource.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice *string `pulumi:"spotPrice"`
	// Public Subnet Name.
	Subnet *string `pulumi:"subnet"`
	// Instance tag of cloud provider.
	//
	// Deprecated: Use tags instead.
	TagLists []string `pulumi:"tagLists"`
	// A map of tags to assign to the transit gateway.
	Tags map[string]string `pulumi:"tags"`
	// The IPSec tunnel down detection time for the transit gateway.
	TunnelDetectionTime *int `pulumi:"tunnelDetectionTime"`
	// VPC-ID/VNet-Name of cloud provider.
	VpcId *string `pulumi:"vpcId"`
	// Region of cloud provider.
	VpcReg *string `pulumi:"vpcReg"`
	// Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.
	Zone *string `pulumi:"zone"`
}

type TransitGatewayState struct {
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	AccountName pulumi.StringPtrInput
	// If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for
	// this gateway.
	AllocateNewEip pulumi.BoolPtrInput
	// Approved learned CIDRs. Available as of provider version R2.21+.
	ApprovedLearnedCidrs pulumi.StringArrayInput
	// Availability domain for OCI.
	AvailabilityDomain pulumi.StringPtrInput
	// The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.
	AzureEipNameResourceGroup pulumi.StringPtrInput
	// Enable Equal Cost Multi Path (ECMP) routing for the next hop.
	BgpEcmp pulumi.BoolPtrInput
	// BGP Hold Time.
	BgpHoldTime pulumi.IntPtrInput
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP Transit.
	BgpLanInterfaces TransitGatewayBgpLanInterfaceArrayInput
	// List of available BGP LAN interface IPs for transit external device connection creation. Only supports GCP. Available as
	// of provider version R2.21.0+.
	BgpLanIpLists pulumi.StringArrayInput
	// Intended CIDR list to be advertised to external bgp router.
	BgpManualSpokeAdvertiseCidrs pulumi.StringPtrInput
	// BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.
	BgpPollingTime pulumi.StringPtrInput
	// Instance ID of the transit gateway.
	CloudInstanceId pulumi.StringPtrInput
	// Type of cloud service provider, requires an integer value. Use 1 for AWS.
	CloudType pulumi.IntPtrInput
	// Specify Connected Transit status.
	ConnectedTransit pulumi.BoolPtrInput
	// Customer managed key ID.
	CustomerManagedKeys pulumi.StringPtrInput
	// A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned
	// routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this
	// transit gateway.
	CustomizedSpokeVpcRoutes pulumi.StringPtrInput
	// A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC
	// routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall
	// management access for a transit firenet gateway must be enabled.
	CustomizedTransitVpcRoutes pulumi.StringArrayInput
	// Required when allocate_new_eip is false. It uses specified EIP for this gateway.
	Eip pulumi.StringPtrInput
	// Enables Active-Standby Mode, available only with HA enabled.
	EnableActiveStandby pulumi.BoolPtrInput
	// Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.
	EnableActiveStandbyPreemptive pulumi.BoolPtrInput
	// Switch to Enable/Disable advertise transit VPC network CIDR.
	EnableAdvertiseTransitCidr pulumi.BoolPtrInput
	// Pre-allocate a network interface(eth4) for "BGP over LAN" functionality. Only valid for cloud_type = 4 (GCP) and 8
	// (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+
	EnableBgpOverLan pulumi.BoolPtrInput
	// Specify whether to enable egress transit firenet interfaces or not.
	EnableEgressTransitFirenet pulumi.BoolPtrInput
	// Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default
	// value: false.
	EnableEncryptVolume pulumi.BoolPtrInput
	// Specify whether to enable firenet interfaces or not.
	EnableFirenet pulumi.BoolPtrInput
	// Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet`
	// are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions
	// us-west-2 and us-east-1. Valid values: true or false. Default value: false.
	EnableGatewayLoadBalancer pulumi.BoolPtrInput
	// Sign of readiness for TGW connection.
	EnableHybridConnection pulumi.BoolPtrInput
	// Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.
	EnableJumboFrame pulumi.BoolPtrInput
	// Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for
	// cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.
	EnableMonitorGatewaySubnets pulumi.BoolPtrInput
	// Enable Multi-tier Transit mode on transit gateway.
	EnableMultiTierTransit pulumi.BoolPtrInput
	// Enable private OOB.
	EnablePrivateOob pulumi.BoolPtrInput
	// Enable S2C receive packet CPU re-balancing on transit gateway.
	EnableS2cRxBalancing pulumi.BoolPtrInput
	// Enable segmentation to allow association of transit gateway to security domains.
	EnableSegmentation pulumi.BoolPtrInput
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrInput
	// Specify whether to enable transit firenet interfaces or not.
	EnableTransitFirenet pulumi.BoolPtrInput
	// Enable summarize CIDR to TGW.
	EnableTransitSummarizeCidrToTgw pulumi.BoolPtrInput
	// Enable vpc_dns_server for Gateway. Valid values: true, false.
	EnableVpcDnsServer pulumi.BoolPtrInput
	// A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all
	// the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.
	ExcludedAdvertisedSpokeRoutes pulumi.StringPtrInput
	// Fault domain for OCI.
	FaultDomain pulumi.StringPtrInput
	// A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or
	// it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all
	// spoke gateways attached to this transit gateway.
	FilteredSpokeVpcRoutes pulumi.StringPtrInput
	// Name of the gateway which is going to be created.
	GwName pulumi.StringPtrInput
	// Size of the gateway instance.
	GwSize pulumi.StringPtrInput
	// HA availability domain for OCI.
	HaAvailabilityDomain pulumi.StringPtrInput
	// The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.
	HaAzureEipNameResourceGroup pulumi.StringPtrInput
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP HA Transit.
	HaBgpLanInterfaces TransitGatewayHaBgpLanInterfaceArrayInput
	// List of available BGP LAN interface IPs for transit external device HA connection creation. Only supports GCP. Available
	// as of provider version R2.21.0+.
	HaBgpLanIpLists pulumi.StringArrayInput
	// Cloud instance ID of HA transit gateway.
	HaCloudInstanceId pulumi.StringPtrInput
	// Public IP address that you want assigned to the HA Transit Gateway.
	HaEip pulumi.StringPtrInput
	// HA fault domain for OCI.
	HaFaultDomain pulumi.StringPtrInput
	// Aviatrix transit gateway unique name of HA transit gateway.
	HaGwName pulumi.StringPtrInput
	// HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).
	HaGwSize pulumi.StringPtrInput
	// ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the
	// gateway to the specified version.
	HaImageVersion pulumi.StringPtrInput
	// AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet
	// is set.
	HaInsaneModeAz pulumi.StringPtrInput
	// Transit gateway lan interface cidr for the HA gateway.
	HaLanInterfaceCidr pulumi.StringPtrInput
	// OOB HA availability zone.
	HaOobAvailabilityZone pulumi.StringPtrInput
	// OOB HA management subnet.
	HaOobManagementSubnet pulumi.StringPtrInput
	// Private IP address of HA transit gateway.
	HaPrivateIp pulumi.StringPtrInput
	// HA security group used for the transit gateway.
	HaSecurityGroupId pulumi.StringPtrInput
	// ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update
	// the gateway to the specified version. If left blank, the gateway software version will continue to be managed through
	// the aviatrix_controller_config resource.
	HaSoftwareVersion pulumi.StringPtrInput
	// HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP
	// gateway.
	HaSubnet pulumi.StringPtrInput
	// HA Zone. Required if enabling HA for GCP. Optional for Azure.
	HaZone pulumi.StringPtrInput
	// image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway
	// to the specified version.
	ImageVersion pulumi.StringPtrInput
	// Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode
	// is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
	InsaneMode pulumi.BoolPtrInput
	// AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.
	InsaneModeAz pulumi.StringPtrInput
	// Transit gateway lan interface cidr.
	LanInterfaceCidr pulumi.StringPtrInput
	// LAN Private Subnet. Only used for GCP Transit FireNet.
	LanPrivateSubnet pulumi.StringPtrInput
	// LAN VPC ID. Only used for GCP Transit FireNet.
	LanVpcId pulumi.StringPtrInput
	// Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to
	// 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured
	// on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the
	// connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.
	LearnedCidrsApprovalMode pulumi.StringPtrInput
	// Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringPtrInput
	// A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.
	MonitorExcludeLists pulumi.StringArrayInput
	// OOB subnet availability zone.
	OobAvailabilityZone pulumi.StringPtrInput
	// OOB management subnet.
	OobManagementSubnet pulumi.StringPtrInput
	// List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.
	PrependAsPaths pulumi.StringArrayInput
	// Private IP address of the transit gateway created.
	PrivateIp pulumi.StringPtrInput
	// Gateway ethernet interface RX queue size. Supported for AWS related clouds only.
	RxQueueSize pulumi.StringPtrInput
	// Security group used for the transit gateway.
	SecurityGroupId pulumi.StringPtrInput
	// Set to 'enabled' if this feature is desired.
	SingleAzHa pulumi.BoolPtrInput
	// Enable or disable Source NAT feature in 'single_ip' mode for this container.
	SingleIpSnat pulumi.BoolPtrInput
	// software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the
	// gateway to the specified version. If left blank, the gateway software version will continue to be managed through the
	// aviatrix_controller_config resource.
	SoftwareVersion pulumi.StringPtrInput
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrInput
	// Public Subnet Name.
	Subnet pulumi.StringPtrInput
	// Instance tag of cloud provider.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayInput
	// A map of tags to assign to the transit gateway.
	Tags pulumi.StringMapInput
	// The IPSec tunnel down detection time for the transit gateway.
	TunnelDetectionTime pulumi.IntPtrInput
	// VPC-ID/VNet-Name of cloud provider.
	VpcId pulumi.StringPtrInput
	// Region of cloud provider.
	VpcReg pulumi.StringPtrInput
	// Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.
	Zone pulumi.StringPtrInput
}

func (TransitGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayState)(nil)).Elem()
}

type transitGatewayArgs struct {
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	AccountName string `pulumi:"accountName"`
	// If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for
	// this gateway.
	AllocateNewEip *bool `pulumi:"allocateNewEip"`
	// Approved learned CIDRs. Available as of provider version R2.21+.
	ApprovedLearnedCidrs []string `pulumi:"approvedLearnedCidrs"`
	// Availability domain for OCI.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.
	AzureEipNameResourceGroup *string `pulumi:"azureEipNameResourceGroup"`
	// Enable Equal Cost Multi Path (ECMP) routing for the next hop.
	BgpEcmp *bool `pulumi:"bgpEcmp"`
	// BGP Hold Time.
	BgpHoldTime *int `pulumi:"bgpHoldTime"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP Transit.
	BgpLanInterfaces []TransitGatewayBgpLanInterface `pulumi:"bgpLanInterfaces"`
	// Intended CIDR list to be advertised to external bgp router.
	BgpManualSpokeAdvertiseCidrs *string `pulumi:"bgpManualSpokeAdvertiseCidrs"`
	// BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.
	BgpPollingTime *string `pulumi:"bgpPollingTime"`
	// Type of cloud service provider, requires an integer value. Use 1 for AWS.
	CloudType int `pulumi:"cloudType"`
	// Specify Connected Transit status.
	ConnectedTransit *bool `pulumi:"connectedTransit"`
	// Customer managed key ID.
	CustomerManagedKeys *string `pulumi:"customerManagedKeys"`
	// A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned
	// routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this
	// transit gateway.
	CustomizedSpokeVpcRoutes *string `pulumi:"customizedSpokeVpcRoutes"`
	// A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC
	// routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall
	// management access for a transit firenet gateway must be enabled.
	CustomizedTransitVpcRoutes []string `pulumi:"customizedTransitVpcRoutes"`
	// Required when allocate_new_eip is false. It uses specified EIP for this gateway.
	Eip *string `pulumi:"eip"`
	// Enables Active-Standby Mode, available only with HA enabled.
	EnableActiveStandby *bool `pulumi:"enableActiveStandby"`
	// Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.
	EnableActiveStandbyPreemptive *bool `pulumi:"enableActiveStandbyPreemptive"`
	// Switch to Enable/Disable advertise transit VPC network CIDR.
	EnableAdvertiseTransitCidr *bool `pulumi:"enableAdvertiseTransitCidr"`
	// Pre-allocate a network interface(eth4) for "BGP over LAN" functionality. Only valid for cloud_type = 4 (GCP) and 8
	// (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+
	EnableBgpOverLan *bool `pulumi:"enableBgpOverLan"`
	// Specify whether to enable egress transit firenet interfaces or not.
	EnableEgressTransitFirenet *bool `pulumi:"enableEgressTransitFirenet"`
	// Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default
	// value: false.
	EnableEncryptVolume *bool `pulumi:"enableEncryptVolume"`
	// Specify whether to enable firenet interfaces or not.
	EnableFirenet *bool `pulumi:"enableFirenet"`
	// Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet`
	// are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions
	// us-west-2 and us-east-1. Valid values: true or false. Default value: false.
	EnableGatewayLoadBalancer *bool `pulumi:"enableGatewayLoadBalancer"`
	// Sign of readiness for TGW connection.
	EnableHybridConnection *bool `pulumi:"enableHybridConnection"`
	// Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.
	EnableJumboFrame *bool `pulumi:"enableJumboFrame"`
	// Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for
	// cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.
	EnableMonitorGatewaySubnets *bool `pulumi:"enableMonitorGatewaySubnets"`
	// Enable Multi-tier Transit mode on transit gateway.
	EnableMultiTierTransit *bool `pulumi:"enableMultiTierTransit"`
	// Enable private OOB.
	EnablePrivateOob *bool `pulumi:"enablePrivateOob"`
	// Enable S2C receive packet CPU re-balancing on transit gateway.
	EnableS2cRxBalancing *bool `pulumi:"enableS2cRxBalancing"`
	// Enable segmentation to allow association of transit gateway to security domains.
	EnableSegmentation *bool `pulumi:"enableSegmentation"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance *bool `pulumi:"enableSpotInstance"`
	// Specify whether to enable transit firenet interfaces or not.
	EnableTransitFirenet *bool `pulumi:"enableTransitFirenet"`
	// Enable summarize CIDR to TGW.
	EnableTransitSummarizeCidrToTgw *bool `pulumi:"enableTransitSummarizeCidrToTgw"`
	// Enable vpc_dns_server for Gateway. Valid values: true, false.
	EnableVpcDnsServer *bool `pulumi:"enableVpcDnsServer"`
	// A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all
	// the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.
	ExcludedAdvertisedSpokeRoutes *string `pulumi:"excludedAdvertisedSpokeRoutes"`
	// Fault domain for OCI.
	FaultDomain *string `pulumi:"faultDomain"`
	// A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or
	// it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all
	// spoke gateways attached to this transit gateway.
	FilteredSpokeVpcRoutes *string `pulumi:"filteredSpokeVpcRoutes"`
	// Name of the gateway which is going to be created.
	GwName string `pulumi:"gwName"`
	// Size of the gateway instance.
	GwSize string `pulumi:"gwSize"`
	// HA availability domain for OCI.
	HaAvailabilityDomain *string `pulumi:"haAvailabilityDomain"`
	// The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.
	HaAzureEipNameResourceGroup *string `pulumi:"haAzureEipNameResourceGroup"`
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP HA Transit.
	HaBgpLanInterfaces []TransitGatewayHaBgpLanInterface `pulumi:"haBgpLanInterfaces"`
	// Public IP address that you want assigned to the HA Transit Gateway.
	HaEip *string `pulumi:"haEip"`
	// HA fault domain for OCI.
	HaFaultDomain *string `pulumi:"haFaultDomain"`
	// HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).
	HaGwSize *string `pulumi:"haGwSize"`
	// ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the
	// gateway to the specified version.
	HaImageVersion *string `pulumi:"haImageVersion"`
	// AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet
	// is set.
	HaInsaneModeAz *string `pulumi:"haInsaneModeAz"`
	// OOB HA availability zone.
	HaOobAvailabilityZone *string `pulumi:"haOobAvailabilityZone"`
	// OOB HA management subnet.
	HaOobManagementSubnet *string `pulumi:"haOobManagementSubnet"`
	// ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update
	// the gateway to the specified version. If left blank, the gateway software version will continue to be managed through
	// the aviatrix_controller_config resource.
	HaSoftwareVersion *string `pulumi:"haSoftwareVersion"`
	// HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP
	// gateway.
	HaSubnet *string `pulumi:"haSubnet"`
	// HA Zone. Required if enabling HA for GCP. Optional for Azure.
	HaZone *string `pulumi:"haZone"`
	// image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway
	// to the specified version.
	ImageVersion *string `pulumi:"imageVersion"`
	// Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode
	// is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
	InsaneMode *bool `pulumi:"insaneMode"`
	// AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.
	InsaneModeAz *string `pulumi:"insaneModeAz"`
	// LAN Private Subnet. Only used for GCP Transit FireNet.
	LanPrivateSubnet *string `pulumi:"lanPrivateSubnet"`
	// LAN VPC ID. Only used for GCP Transit FireNet.
	LanVpcId *string `pulumi:"lanVpcId"`
	// Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to
	// 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured
	// on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the
	// connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.
	LearnedCidrsApprovalMode *string `pulumi:"learnedCidrsApprovalMode"`
	// Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber *string `pulumi:"localAsNumber"`
	// A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.
	MonitorExcludeLists []string `pulumi:"monitorExcludeLists"`
	// OOB subnet availability zone.
	OobAvailabilityZone *string `pulumi:"oobAvailabilityZone"`
	// OOB management subnet.
	OobManagementSubnet *string `pulumi:"oobManagementSubnet"`
	// List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// Gateway ethernet interface RX queue size. Supported for AWS related clouds only.
	RxQueueSize *string `pulumi:"rxQueueSize"`
	// Set to 'enabled' if this feature is desired.
	SingleAzHa *bool `pulumi:"singleAzHa"`
	// Enable or disable Source NAT feature in 'single_ip' mode for this container.
	SingleIpSnat *bool `pulumi:"singleIpSnat"`
	// software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the
	// gateway to the specified version. If left blank, the gateway software version will continue to be managed through the
	// aviatrix_controller_config resource.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice *string `pulumi:"spotPrice"`
	// Public Subnet Name.
	Subnet string `pulumi:"subnet"`
	// Instance tag of cloud provider.
	//
	// Deprecated: Use tags instead.
	TagLists []string `pulumi:"tagLists"`
	// A map of tags to assign to the transit gateway.
	Tags map[string]string `pulumi:"tags"`
	// The IPSec tunnel down detection time for the transit gateway.
	TunnelDetectionTime *int `pulumi:"tunnelDetectionTime"`
	// VPC-ID/VNet-Name of cloud provider.
	VpcId string `pulumi:"vpcId"`
	// Region of cloud provider.
	VpcReg string `pulumi:"vpcReg"`
	// Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a TransitGateway resource.
type TransitGatewayArgs struct {
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	AccountName pulumi.StringInput
	// If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for
	// this gateway.
	AllocateNewEip pulumi.BoolPtrInput
	// Approved learned CIDRs. Available as of provider version R2.21+.
	ApprovedLearnedCidrs pulumi.StringArrayInput
	// Availability domain for OCI.
	AvailabilityDomain pulumi.StringPtrInput
	// The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.
	AzureEipNameResourceGroup pulumi.StringPtrInput
	// Enable Equal Cost Multi Path (ECMP) routing for the next hop.
	BgpEcmp pulumi.BoolPtrInput
	// BGP Hold Time.
	BgpHoldTime pulumi.IntPtrInput
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP Transit.
	BgpLanInterfaces TransitGatewayBgpLanInterfaceArrayInput
	// Intended CIDR list to be advertised to external bgp router.
	BgpManualSpokeAdvertiseCidrs pulumi.StringPtrInput
	// BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.
	BgpPollingTime pulumi.StringPtrInput
	// Type of cloud service provider, requires an integer value. Use 1 for AWS.
	CloudType pulumi.IntInput
	// Specify Connected Transit status.
	ConnectedTransit pulumi.BoolPtrInput
	// Customer managed key ID.
	CustomerManagedKeys pulumi.StringPtrInput
	// A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned
	// routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this
	// transit gateway.
	CustomizedSpokeVpcRoutes pulumi.StringPtrInput
	// A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC
	// routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall
	// management access for a transit firenet gateway must be enabled.
	CustomizedTransitVpcRoutes pulumi.StringArrayInput
	// Required when allocate_new_eip is false. It uses specified EIP for this gateway.
	Eip pulumi.StringPtrInput
	// Enables Active-Standby Mode, available only with HA enabled.
	EnableActiveStandby pulumi.BoolPtrInput
	// Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.
	EnableActiveStandbyPreemptive pulumi.BoolPtrInput
	// Switch to Enable/Disable advertise transit VPC network CIDR.
	EnableAdvertiseTransitCidr pulumi.BoolPtrInput
	// Pre-allocate a network interface(eth4) for "BGP over LAN" functionality. Only valid for cloud_type = 4 (GCP) and 8
	// (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+
	EnableBgpOverLan pulumi.BoolPtrInput
	// Specify whether to enable egress transit firenet interfaces or not.
	EnableEgressTransitFirenet pulumi.BoolPtrInput
	// Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default
	// value: false.
	EnableEncryptVolume pulumi.BoolPtrInput
	// Specify whether to enable firenet interfaces or not.
	EnableFirenet pulumi.BoolPtrInput
	// Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet`
	// are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions
	// us-west-2 and us-east-1. Valid values: true or false. Default value: false.
	EnableGatewayLoadBalancer pulumi.BoolPtrInput
	// Sign of readiness for TGW connection.
	EnableHybridConnection pulumi.BoolPtrInput
	// Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.
	EnableJumboFrame pulumi.BoolPtrInput
	// Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for
	// cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.
	EnableMonitorGatewaySubnets pulumi.BoolPtrInput
	// Enable Multi-tier Transit mode on transit gateway.
	EnableMultiTierTransit pulumi.BoolPtrInput
	// Enable private OOB.
	EnablePrivateOob pulumi.BoolPtrInput
	// Enable S2C receive packet CPU re-balancing on transit gateway.
	EnableS2cRxBalancing pulumi.BoolPtrInput
	// Enable segmentation to allow association of transit gateway to security domains.
	EnableSegmentation pulumi.BoolPtrInput
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrInput
	// Specify whether to enable transit firenet interfaces or not.
	EnableTransitFirenet pulumi.BoolPtrInput
	// Enable summarize CIDR to TGW.
	EnableTransitSummarizeCidrToTgw pulumi.BoolPtrInput
	// Enable vpc_dns_server for Gateway. Valid values: true, false.
	EnableVpcDnsServer pulumi.BoolPtrInput
	// A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all
	// the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.
	ExcludedAdvertisedSpokeRoutes pulumi.StringPtrInput
	// Fault domain for OCI.
	FaultDomain pulumi.StringPtrInput
	// A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or
	// it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all
	// spoke gateways attached to this transit gateway.
	FilteredSpokeVpcRoutes pulumi.StringPtrInput
	// Name of the gateway which is going to be created.
	GwName pulumi.StringInput
	// Size of the gateway instance.
	GwSize pulumi.StringInput
	// HA availability domain for OCI.
	HaAvailabilityDomain pulumi.StringPtrInput
	// The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.
	HaAzureEipNameResourceGroup pulumi.StringPtrInput
	// Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available
	// for GCP HA Transit.
	HaBgpLanInterfaces TransitGatewayHaBgpLanInterfaceArrayInput
	// Public IP address that you want assigned to the HA Transit Gateway.
	HaEip pulumi.StringPtrInput
	// HA fault domain for OCI.
	HaFaultDomain pulumi.StringPtrInput
	// HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).
	HaGwSize pulumi.StringPtrInput
	// ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the
	// gateway to the specified version.
	HaImageVersion pulumi.StringPtrInput
	// AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet
	// is set.
	HaInsaneModeAz pulumi.StringPtrInput
	// OOB HA availability zone.
	HaOobAvailabilityZone pulumi.StringPtrInput
	// OOB HA management subnet.
	HaOobManagementSubnet pulumi.StringPtrInput
	// ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update
	// the gateway to the specified version. If left blank, the gateway software version will continue to be managed through
	// the aviatrix_controller_config resource.
	HaSoftwareVersion pulumi.StringPtrInput
	// HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP
	// gateway.
	HaSubnet pulumi.StringPtrInput
	// HA Zone. Required if enabling HA for GCP. Optional for Azure.
	HaZone pulumi.StringPtrInput
	// image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway
	// to the specified version.
	ImageVersion pulumi.StringPtrInput
	// Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode
	// is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
	InsaneMode pulumi.BoolPtrInput
	// AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.
	InsaneModeAz pulumi.StringPtrInput
	// LAN Private Subnet. Only used for GCP Transit FireNet.
	LanPrivateSubnet pulumi.StringPtrInput
	// LAN VPC ID. Only used for GCP Transit FireNet.
	LanVpcId pulumi.StringPtrInput
	// Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to
	// 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured
	// on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the
	// connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.
	LearnedCidrsApprovalMode pulumi.StringPtrInput
	// Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringPtrInput
	// A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.
	MonitorExcludeLists pulumi.StringArrayInput
	// OOB subnet availability zone.
	OobAvailabilityZone pulumi.StringPtrInput
	// OOB management subnet.
	OobManagementSubnet pulumi.StringPtrInput
	// List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.
	PrependAsPaths pulumi.StringArrayInput
	// Gateway ethernet interface RX queue size. Supported for AWS related clouds only.
	RxQueueSize pulumi.StringPtrInput
	// Set to 'enabled' if this feature is desired.
	SingleAzHa pulumi.BoolPtrInput
	// Enable or disable Source NAT feature in 'single_ip' mode for this container.
	SingleIpSnat pulumi.BoolPtrInput
	// software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the
	// gateway to the specified version. If left blank, the gateway software version will continue to be managed through the
	// aviatrix_controller_config resource.
	SoftwareVersion pulumi.StringPtrInput
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrInput
	// Public Subnet Name.
	Subnet pulumi.StringInput
	// Instance tag of cloud provider.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayInput
	// A map of tags to assign to the transit gateway.
	Tags pulumi.StringMapInput
	// The IPSec tunnel down detection time for the transit gateway.
	TunnelDetectionTime pulumi.IntPtrInput
	// VPC-ID/VNet-Name of cloud provider.
	VpcId pulumi.StringInput
	// Region of cloud provider.
	VpcReg pulumi.StringInput
	// Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.
	Zone pulumi.StringPtrInput
}

func (TransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayArgs)(nil)).Elem()
}

type TransitGatewayInput interface {
	pulumi.Input

	ToTransitGatewayOutput() TransitGatewayOutput
	ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput
}

func (*TransitGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGateway)(nil)).Elem()
}

func (i *TransitGateway) ToTransitGatewayOutput() TransitGatewayOutput {
	return i.ToTransitGatewayOutputWithContext(context.Background())
}

func (i *TransitGateway) ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayOutput)
}

// TransitGatewayArrayInput is an input type that accepts TransitGatewayArray and TransitGatewayArrayOutput values.
// You can construct a concrete instance of `TransitGatewayArrayInput` via:
//
//          TransitGatewayArray{ TransitGatewayArgs{...} }
type TransitGatewayArrayInput interface {
	pulumi.Input

	ToTransitGatewayArrayOutput() TransitGatewayArrayOutput
	ToTransitGatewayArrayOutputWithContext(context.Context) TransitGatewayArrayOutput
}

type TransitGatewayArray []TransitGatewayInput

func (TransitGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitGateway)(nil)).Elem()
}

func (i TransitGatewayArray) ToTransitGatewayArrayOutput() TransitGatewayArrayOutput {
	return i.ToTransitGatewayArrayOutputWithContext(context.Background())
}

func (i TransitGatewayArray) ToTransitGatewayArrayOutputWithContext(ctx context.Context) TransitGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayArrayOutput)
}

// TransitGatewayMapInput is an input type that accepts TransitGatewayMap and TransitGatewayMapOutput values.
// You can construct a concrete instance of `TransitGatewayMapInput` via:
//
//          TransitGatewayMap{ "key": TransitGatewayArgs{...} }
type TransitGatewayMapInput interface {
	pulumi.Input

	ToTransitGatewayMapOutput() TransitGatewayMapOutput
	ToTransitGatewayMapOutputWithContext(context.Context) TransitGatewayMapOutput
}

type TransitGatewayMap map[string]TransitGatewayInput

func (TransitGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitGateway)(nil)).Elem()
}

func (i TransitGatewayMap) ToTransitGatewayMapOutput() TransitGatewayMapOutput {
	return i.ToTransitGatewayMapOutputWithContext(context.Background())
}

func (i TransitGatewayMap) ToTransitGatewayMapOutputWithContext(ctx context.Context) TransitGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayMapOutput)
}

type TransitGatewayOutput struct{ *pulumi.OutputState }

func (TransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGateway)(nil)).Elem()
}

func (o TransitGatewayOutput) ToTransitGatewayOutput() TransitGatewayOutput {
	return o
}

func (o TransitGatewayOutput) ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput {
	return o
}

type TransitGatewayArrayOutput struct{ *pulumi.OutputState }

func (TransitGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitGateway)(nil)).Elem()
}

func (o TransitGatewayArrayOutput) ToTransitGatewayArrayOutput() TransitGatewayArrayOutput {
	return o
}

func (o TransitGatewayArrayOutput) ToTransitGatewayArrayOutputWithContext(ctx context.Context) TransitGatewayArrayOutput {
	return o
}

func (o TransitGatewayArrayOutput) Index(i pulumi.IntInput) TransitGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitGateway {
		return vs[0].([]*TransitGateway)[vs[1].(int)]
	}).(TransitGatewayOutput)
}

type TransitGatewayMapOutput struct{ *pulumi.OutputState }

func (TransitGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitGateway)(nil)).Elem()
}

func (o TransitGatewayMapOutput) ToTransitGatewayMapOutput() TransitGatewayMapOutput {
	return o
}

func (o TransitGatewayMapOutput) ToTransitGatewayMapOutputWithContext(ctx context.Context) TransitGatewayMapOutput {
	return o
}

func (o TransitGatewayMapOutput) MapIndex(k pulumi.StringInput) TransitGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitGateway {
		return vs[0].(map[string]*TransitGateway)[vs[1].(string)]
	}).(TransitGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayInput)(nil)).Elem(), &TransitGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayArrayInput)(nil)).Elem(), TransitGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayMapInput)(nil)).Elem(), TransitGatewayMap{})
	pulumi.RegisterOutputType(TransitGatewayOutput{})
	pulumi.RegisterOutputType(TransitGatewayArrayOutput{})
	pulumi.RegisterOutputType(TransitGatewayMapOutput{})
}
