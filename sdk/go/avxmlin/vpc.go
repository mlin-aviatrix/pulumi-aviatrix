// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package avxmlin

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Vpc struct {
	pulumi.CustomResourceState

	// Account name. This account will be used to create an Aviatrix VPC.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// List of OCI availability domains.
	AvailabilityDomains pulumi.StringArrayOutput `pulumi:"availabilityDomains"`
	// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
	AviatrixFirenetVpc pulumi.BoolPtrOutput `pulumi:"aviatrixFirenetVpc"`
	// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
	AviatrixTransitVpc pulumi.BoolPtrOutput `pulumi:"aviatrixTransitVpc"`
	// Azure vnet resource ID.
	AzureVnetResourceId pulumi.StringOutput `pulumi:"azureVnetResourceId"`
	// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
	Cidr pulumi.StringPtrOutput `pulumi:"cidr"`
	// Type of cloud service provider.
	CloudType pulumi.IntOutput `pulumi:"cloudType"`
	// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
	// value: false. Available as of provider version R2.18+.
	EnableNativeGwlb pulumi.BoolPtrOutput `pulumi:"enableNativeGwlb"`
	// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
	// false.
	EnablePrivateOobSubnet pulumi.BoolPtrOutput `pulumi:"enablePrivateOobSubnet"`
	// List of OCI fault domains.
	FaultDomains pulumi.StringArrayOutput `pulumi:"faultDomains"`
	// Name of the VPC to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of public subnet and private subnet pair to be created.
	NumOfSubnetPairs pulumi.IntPtrOutput `pulumi:"numOfSubnetPairs"`
	// List of private subnet of the VPC to be created.
	PrivateSubnets VpcPrivateSubnetArrayOutput `pulumi:"privateSubnets"`
	// List of public subnet of the VPC to be created.
	PublicSubnets VpcPublicSubnetArrayOutput `pulumi:"publicSubnets"`
	// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// Resource group of the Azure VPC created.
	ResourceGroup pulumi.StringOutput `pulumi:"resourceGroup"`
	// List of route table ids associated with this VPC.
	RouteTables pulumi.StringArrayOutput `pulumi:"routeTables"`
	// Subnet size.
	SubnetSize pulumi.IntPtrOutput `pulumi:"subnetSize"`
	// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
	Subnets VpcSubnetArrayOutput `pulumi:"subnets"`
	// ID of the VPC created.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpc registers a new resource with the given unique name, arguments, and options.
func NewVpc(ctx *pulumi.Context,
	name string, args *VpcArgs, opts ...pulumi.ResourceOption) (*Vpc, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.CloudType == nil {
		return nil, errors.New("invalid value for required argument 'CloudType'")
	}
	var resource Vpc
	err := ctx.RegisterResource("avxmlin:index/vpc:Vpc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpc gets an existing Vpc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcState, opts ...pulumi.ResourceOption) (*Vpc, error) {
	var resource Vpc
	err := ctx.ReadResource("avxmlin:index/vpc:Vpc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vpc resources.
type vpcState struct {
	// Account name. This account will be used to create an Aviatrix VPC.
	AccountName *string `pulumi:"accountName"`
	// List of OCI availability domains.
	AvailabilityDomains []string `pulumi:"availabilityDomains"`
	// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
	AviatrixFirenetVpc *bool `pulumi:"aviatrixFirenetVpc"`
	// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
	AviatrixTransitVpc *bool `pulumi:"aviatrixTransitVpc"`
	// Azure vnet resource ID.
	AzureVnetResourceId *string `pulumi:"azureVnetResourceId"`
	// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
	Cidr *string `pulumi:"cidr"`
	// Type of cloud service provider.
	CloudType *int `pulumi:"cloudType"`
	// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
	// value: false. Available as of provider version R2.18+.
	EnableNativeGwlb *bool `pulumi:"enableNativeGwlb"`
	// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
	// false.
	EnablePrivateOobSubnet *bool `pulumi:"enablePrivateOobSubnet"`
	// List of OCI fault domains.
	FaultDomains []string `pulumi:"faultDomains"`
	// Name of the VPC to be created.
	Name *string `pulumi:"name"`
	// Number of public subnet and private subnet pair to be created.
	NumOfSubnetPairs *int `pulumi:"numOfSubnetPairs"`
	// List of private subnet of the VPC to be created.
	PrivateSubnets []VpcPrivateSubnet `pulumi:"privateSubnets"`
	// List of public subnet of the VPC to be created.
	PublicSubnets []VpcPublicSubnet `pulumi:"publicSubnets"`
	// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
	Region *string `pulumi:"region"`
	// Resource group of the Azure VPC created.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// List of route table ids associated with this VPC.
	RouteTables []string `pulumi:"routeTables"`
	// Subnet size.
	SubnetSize *int `pulumi:"subnetSize"`
	// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
	Subnets []VpcSubnet `pulumi:"subnets"`
	// ID of the VPC created.
	VpcId *string `pulumi:"vpcId"`
}

type VpcState struct {
	// Account name. This account will be used to create an Aviatrix VPC.
	AccountName pulumi.StringPtrInput
	// List of OCI availability domains.
	AvailabilityDomains pulumi.StringArrayInput
	// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
	AviatrixFirenetVpc pulumi.BoolPtrInput
	// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
	AviatrixTransitVpc pulumi.BoolPtrInput
	// Azure vnet resource ID.
	AzureVnetResourceId pulumi.StringPtrInput
	// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
	Cidr pulumi.StringPtrInput
	// Type of cloud service provider.
	CloudType pulumi.IntPtrInput
	// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
	// value: false. Available as of provider version R2.18+.
	EnableNativeGwlb pulumi.BoolPtrInput
	// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
	// false.
	EnablePrivateOobSubnet pulumi.BoolPtrInput
	// List of OCI fault domains.
	FaultDomains pulumi.StringArrayInput
	// Name of the VPC to be created.
	Name pulumi.StringPtrInput
	// Number of public subnet and private subnet pair to be created.
	NumOfSubnetPairs pulumi.IntPtrInput
	// List of private subnet of the VPC to be created.
	PrivateSubnets VpcPrivateSubnetArrayInput
	// List of public subnet of the VPC to be created.
	PublicSubnets VpcPublicSubnetArrayInput
	// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
	Region pulumi.StringPtrInput
	// Resource group of the Azure VPC created.
	ResourceGroup pulumi.StringPtrInput
	// List of route table ids associated with this VPC.
	RouteTables pulumi.StringArrayInput
	// Subnet size.
	SubnetSize pulumi.IntPtrInput
	// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
	Subnets VpcSubnetArrayInput
	// ID of the VPC created.
	VpcId pulumi.StringPtrInput
}

func (VpcState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcState)(nil)).Elem()
}

type vpcArgs struct {
	// Account name. This account will be used to create an Aviatrix VPC.
	AccountName string `pulumi:"accountName"`
	// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
	AviatrixFirenetVpc *bool `pulumi:"aviatrixFirenetVpc"`
	// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
	AviatrixTransitVpc *bool `pulumi:"aviatrixTransitVpc"`
	// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
	Cidr *string `pulumi:"cidr"`
	// Type of cloud service provider.
	CloudType int `pulumi:"cloudType"`
	// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
	// value: false. Available as of provider version R2.18+.
	EnableNativeGwlb *bool `pulumi:"enableNativeGwlb"`
	// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
	// false.
	EnablePrivateOobSubnet *bool `pulumi:"enablePrivateOobSubnet"`
	// Name of the VPC to be created.
	Name *string `pulumi:"name"`
	// Number of public subnet and private subnet pair to be created.
	NumOfSubnetPairs *int `pulumi:"numOfSubnetPairs"`
	// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
	Region *string `pulumi:"region"`
	// Resource group of the Azure VPC created.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Subnet size.
	SubnetSize *int `pulumi:"subnetSize"`
	// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
	Subnets []VpcSubnet `pulumi:"subnets"`
}

// The set of arguments for constructing a Vpc resource.
type VpcArgs struct {
	// Account name. This account will be used to create an Aviatrix VPC.
	AccountName pulumi.StringInput
	// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
	AviatrixFirenetVpc pulumi.BoolPtrInput
	// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
	AviatrixTransitVpc pulumi.BoolPtrInput
	// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
	Cidr pulumi.StringPtrInput
	// Type of cloud service provider.
	CloudType pulumi.IntInput
	// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
	// value: false. Available as of provider version R2.18+.
	EnableNativeGwlb pulumi.BoolPtrInput
	// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
	// false.
	EnablePrivateOobSubnet pulumi.BoolPtrInput
	// Name of the VPC to be created.
	Name pulumi.StringPtrInput
	// Number of public subnet and private subnet pair to be created.
	NumOfSubnetPairs pulumi.IntPtrInput
	// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
	Region pulumi.StringPtrInput
	// Resource group of the Azure VPC created.
	ResourceGroup pulumi.StringPtrInput
	// Subnet size.
	SubnetSize pulumi.IntPtrInput
	// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
	Subnets VpcSubnetArrayInput
}

func (VpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcArgs)(nil)).Elem()
}

type VpcInput interface {
	pulumi.Input

	ToVpcOutput() VpcOutput
	ToVpcOutputWithContext(ctx context.Context) VpcOutput
}

func (*Vpc) ElementType() reflect.Type {
	return reflect.TypeOf((**Vpc)(nil)).Elem()
}

func (i *Vpc) ToVpcOutput() VpcOutput {
	return i.ToVpcOutputWithContext(context.Background())
}

func (i *Vpc) ToVpcOutputWithContext(ctx context.Context) VpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcOutput)
}

// VpcArrayInput is an input type that accepts VpcArray and VpcArrayOutput values.
// You can construct a concrete instance of `VpcArrayInput` via:
//
//          VpcArray{ VpcArgs{...} }
type VpcArrayInput interface {
	pulumi.Input

	ToVpcArrayOutput() VpcArrayOutput
	ToVpcArrayOutputWithContext(context.Context) VpcArrayOutput
}

type VpcArray []VpcInput

func (VpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vpc)(nil)).Elem()
}

func (i VpcArray) ToVpcArrayOutput() VpcArrayOutput {
	return i.ToVpcArrayOutputWithContext(context.Background())
}

func (i VpcArray) ToVpcArrayOutputWithContext(ctx context.Context) VpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcArrayOutput)
}

// VpcMapInput is an input type that accepts VpcMap and VpcMapOutput values.
// You can construct a concrete instance of `VpcMapInput` via:
//
//          VpcMap{ "key": VpcArgs{...} }
type VpcMapInput interface {
	pulumi.Input

	ToVpcMapOutput() VpcMapOutput
	ToVpcMapOutputWithContext(context.Context) VpcMapOutput
}

type VpcMap map[string]VpcInput

func (VpcMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vpc)(nil)).Elem()
}

func (i VpcMap) ToVpcMapOutput() VpcMapOutput {
	return i.ToVpcMapOutputWithContext(context.Background())
}

func (i VpcMap) ToVpcMapOutputWithContext(ctx context.Context) VpcMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcMapOutput)
}

type VpcOutput struct{ *pulumi.OutputState }

func (VpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vpc)(nil)).Elem()
}

func (o VpcOutput) ToVpcOutput() VpcOutput {
	return o
}

func (o VpcOutput) ToVpcOutputWithContext(ctx context.Context) VpcOutput {
	return o
}

type VpcArrayOutput struct{ *pulumi.OutputState }

func (VpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vpc)(nil)).Elem()
}

func (o VpcArrayOutput) ToVpcArrayOutput() VpcArrayOutput {
	return o
}

func (o VpcArrayOutput) ToVpcArrayOutputWithContext(ctx context.Context) VpcArrayOutput {
	return o
}

func (o VpcArrayOutput) Index(i pulumi.IntInput) VpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Vpc {
		return vs[0].([]*Vpc)[vs[1].(int)]
	}).(VpcOutput)
}

type VpcMapOutput struct{ *pulumi.OutputState }

func (VpcMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vpc)(nil)).Elem()
}

func (o VpcMapOutput) ToVpcMapOutput() VpcMapOutput {
	return o
}

func (o VpcMapOutput) ToVpcMapOutputWithContext(ctx context.Context) VpcMapOutput {
	return o
}

func (o VpcMapOutput) MapIndex(k pulumi.StringInput) VpcOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Vpc {
		return vs[0].(map[string]*Vpc)[vs[1].(string)]
	}).(VpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcInput)(nil)).Elem(), &Vpc{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcArrayInput)(nil)).Elem(), VpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcMapInput)(nil)).Elem(), VpcMap{})
	pulumi.RegisterOutputType(VpcOutput{})
	pulumi.RegisterOutputType(VpcArrayOutput{})
	pulumi.RegisterOutputType(VpcMapOutput{})
}
