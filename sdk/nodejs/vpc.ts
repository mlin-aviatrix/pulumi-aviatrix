// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class Vpc extends pulumi.CustomResource {
    /**
     * Get an existing Vpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcState, opts?: pulumi.CustomResourceOptions): Vpc {
        return new Vpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/vpc:Vpc';

    /**
     * Returns true if the given object is an instance of Vpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpc.__pulumiType;
    }

    /**
     * Account name. This account will be used to create an Aviatrix VPC.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * List of OCI availability domains.
     */
    public /*out*/ readonly availabilityDomains!: pulumi.Output<string[]>;
    /**
     * Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
     */
    public readonly aviatrixFirenetVpc!: pulumi.Output<boolean | undefined>;
    /**
     * Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
     */
    public readonly aviatrixTransitVpc!: pulumi.Output<boolean | undefined>;
    /**
     * Azure vnet resource ID.
     */
    public /*out*/ readonly azureVnetResourceId!: pulumi.Output<string>;
    /**
     * Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
     */
    public readonly cidr!: pulumi.Output<string | undefined>;
    /**
     * Type of cloud service provider.
     */
    public readonly cloudType!: pulumi.Output<number>;
    /**
     * Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
     * value: false. Available as of provider version R2.18+.
     */
    public readonly enableNativeGwlb!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
     * false.
     */
    public readonly enablePrivateOobSubnet!: pulumi.Output<boolean | undefined>;
    /**
     * List of OCI fault domains.
     */
    public /*out*/ readonly faultDomains!: pulumi.Output<string[]>;
    /**
     * Name of the VPC to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Number of public subnet and private subnet pair to be created.
     */
    public readonly numOfSubnetPairs!: pulumi.Output<number | undefined>;
    /**
     * List of private subnet of the VPC to be created.
     */
    public /*out*/ readonly privateSubnets!: pulumi.Output<outputs.VpcPrivateSubnet[]>;
    /**
     * List of public subnet of the VPC to be created.
     */
    public /*out*/ readonly publicSubnets!: pulumi.Output<outputs.VpcPublicSubnet[]>;
    /**
     * Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Resource group of the Azure VPC created.
     */
    public readonly resourceGroup!: pulumi.Output<string>;
    /**
     * List of route table ids associated with this VPC.
     */
    public /*out*/ readonly routeTables!: pulumi.Output<string[]>;
    /**
     * Subnet size.
     */
    public readonly subnetSize!: pulumi.Output<number | undefined>;
    /**
     * List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
     */
    public readonly subnets!: pulumi.Output<outputs.VpcSubnet[]>;
    /**
     * ID of the VPC created.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Vpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcArgs | VpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["availabilityDomains"] = state ? state.availabilityDomains : undefined;
            resourceInputs["aviatrixFirenetVpc"] = state ? state.aviatrixFirenetVpc : undefined;
            resourceInputs["aviatrixTransitVpc"] = state ? state.aviatrixTransitVpc : undefined;
            resourceInputs["azureVnetResourceId"] = state ? state.azureVnetResourceId : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["enableNativeGwlb"] = state ? state.enableNativeGwlb : undefined;
            resourceInputs["enablePrivateOobSubnet"] = state ? state.enablePrivateOobSubnet : undefined;
            resourceInputs["faultDomains"] = state ? state.faultDomains : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numOfSubnetPairs"] = state ? state.numOfSubnetPairs : undefined;
            resourceInputs["privateSubnets"] = state ? state.privateSubnets : undefined;
            resourceInputs["publicSubnets"] = state ? state.publicSubnets : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["routeTables"] = state ? state.routeTables : undefined;
            resourceInputs["subnetSize"] = state ? state.subnetSize : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["aviatrixFirenetVpc"] = args ? args.aviatrixFirenetVpc : undefined;
            resourceInputs["aviatrixTransitVpc"] = args ? args.aviatrixTransitVpc : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["enableNativeGwlb"] = args ? args.enableNativeGwlb : undefined;
            resourceInputs["enablePrivateOobSubnet"] = args ? args.enablePrivateOobSubnet : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numOfSubnetPairs"] = args ? args.numOfSubnetPairs : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["subnetSize"] = args ? args.subnetSize : undefined;
            resourceInputs["subnets"] = args ? args.subnets : undefined;
            resourceInputs["availabilityDomains"] = undefined /*out*/;
            resourceInputs["azureVnetResourceId"] = undefined /*out*/;
            resourceInputs["faultDomains"] = undefined /*out*/;
            resourceInputs["privateSubnets"] = undefined /*out*/;
            resourceInputs["publicSubnets"] = undefined /*out*/;
            resourceInputs["routeTables"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vpc resources.
 */
export interface VpcState {
    /**
     * Account name. This account will be used to create an Aviatrix VPC.
     */
    accountName?: pulumi.Input<string>;
    /**
     * List of OCI availability domains.
     */
    availabilityDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
     */
    aviatrixFirenetVpc?: pulumi.Input<boolean>;
    /**
     * Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
     */
    aviatrixTransitVpc?: pulumi.Input<boolean>;
    /**
     * Azure vnet resource ID.
     */
    azureVnetResourceId?: pulumi.Input<string>;
    /**
     * Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Type of cloud service provider.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
     * value: false. Available as of provider version R2.18+.
     */
    enableNativeGwlb?: pulumi.Input<boolean>;
    /**
     * Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
     * false.
     */
    enablePrivateOobSubnet?: pulumi.Input<boolean>;
    /**
     * List of OCI fault domains.
     */
    faultDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the VPC to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Number of public subnet and private subnet pair to be created.
     */
    numOfSubnetPairs?: pulumi.Input<number>;
    /**
     * List of private subnet of the VPC to be created.
     */
    privateSubnets?: pulumi.Input<pulumi.Input<inputs.VpcPrivateSubnet>[]>;
    /**
     * List of public subnet of the VPC to be created.
     */
    publicSubnets?: pulumi.Input<pulumi.Input<inputs.VpcPublicSubnet>[]>;
    /**
     * Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
     */
    region?: pulumi.Input<string>;
    /**
     * Resource group of the Azure VPC created.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * List of route table ids associated with this VPC.
     */
    routeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subnet size.
     */
    subnetSize?: pulumi.Input<number>;
    /**
     * List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.VpcSubnet>[]>;
    /**
     * ID of the VPC created.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpc resource.
 */
export interface VpcArgs {
    /**
     * Account name. This account will be used to create an Aviatrix VPC.
     */
    accountName: pulumi.Input<string>;
    /**
     * Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
     */
    aviatrixFirenetVpc?: pulumi.Input<boolean>;
    /**
     * Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
     */
    aviatrixTransitVpc?: pulumi.Input<boolean>;
    /**
     * Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Type of cloud service provider.
     */
    cloudType: pulumi.Input<number>;
    /**
     * Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
     * value: false. Available as of provider version R2.18+.
     */
    enableNativeGwlb?: pulumi.Input<boolean>;
    /**
     * Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
     * false.
     */
    enablePrivateOobSubnet?: pulumi.Input<boolean>;
    /**
     * Name of the VPC to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Number of public subnet and private subnet pair to be created.
     */
    numOfSubnetPairs?: pulumi.Input<number>;
    /**
     * Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
     */
    region?: pulumi.Input<string>;
    /**
     * Resource group of the Azure VPC created.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * Subnet size.
     */
    subnetSize?: pulumi.Input<number>;
    /**
     * List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.VpcSubnet>[]>;
}
